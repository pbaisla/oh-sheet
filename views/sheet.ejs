<!doctype html>
<html>
  <head>
    <title>Oh Sheet! </title>

    <script src="/javascripts/jquery.min.js"></script>
    <script src="/javascripts/handsontable.full.js"></script>
    <script src="/javascripts/bootstrap.min.js"></script>
    <link rel="stylesheet" href="/stylesheets/handsontable.bootstrap.css">
    <link rel="stylesheet" href="/stylesheets/bootstrap.min.css">
    <link rel="stylesheet" media="screen" href="/stylesheets/handsontable.full.css">
    <link rel="stylesheet" href="/stylesheets/style.css">
  </head>

  <body>

    <div class="page-header">
      <h1>Oh Sheet! <small>Online collaborative spreadsheet editor</small></h1>
    </div>

    <div id="sheet" class="dataTable"></div>
    <script src="/socket.io/socket.io.js"></script>
    <script>
      var url = window.location.pathname.split("/")[2];
      var socket = io.connect(window.location.origin);
      socket.on('sheet.url?', function(data) {
        console.log(data);
        socket.emit('sheet.url', { url: url });
      });

      socket.on('changes', applyChanges);

      function applyChanges(input) {
        console.log(input);
        for(var i=0;i<input.length;i++){
          data[input[i].row][input[i].col]=input[i].data;
        }
        table.render();
      }

      var data = [[]];
      var cells = <%- JSON.stringify(sheet) %>;

      for(var i=0; i < cells.length; i++) {
        var cell = cells[i];
        if(!data[cell.row]) {
          while(data.length != cell.row+1) {
            data.push(new Array());
          }
        }
        if(!data[cell.row][cell.col]) {
          while(data[cell.row].length != cell.col+1) {
            data[cell.row].push(null);
          }
        }
        data[cell.row][cell.col] = cell.data;
      }

      var settings = {
        afterChange: function(c, s) {console.log(c); console.log(s);},
        data: data,
        minRows: 30,
        minCols: 30,
        minSpareCols: 1,
        minSpareRows: 1,
        rowHeaders: true,
        colHeaders: true,
        contextMenu: true
      };

      var container = document.querySelector('#sheet');

      var table = new Handsontable(container, settings);

      function pushChange(changes,source) {
        if(source != 'loadData') {
          var cellChange = [];
          for(var i=0; i < changes.length; i++) {
            cellChange.push({row:changes[i][0],col:changes[i][1], data: changes[i][3]});
          }
          socket.emit('save',{url : url , cells:cellChange} );
        }
      }

      function beforeChange(changes, source) {
        if(source != 'loadData') {
          socket.emit('requestForCommit', { changes: changes, id: socket.id, counter: count++ });
        }
      }

      socket.on('commit', applyChanges);
      socket.on('abort', applyChanges);

      socket.on('prepareForCommit', function(input) {
        if(socket.id != input.id) {
          var okayToCommit = true;
          for(var i=0; i < input.changes.length; i++) {
            var row = input.changes[0];
            var col = input.changes[1];
            var oldData = input.changes[2];
            if(data[row][col] != oldData) {
              okayToCommit = false;
              break;
            }
          }
          if(okayToCommit) {
            socket.emit('agreement', { id: input.id, counter: input.counter });
          }
          else {
            socket.emit('disagreement', { id: input.id, counter: input.counter });
          }
        }
      });

      var count = 0;
      table.addHook('afterChange', pushChange);
      table.addHook('beforeChange', beforeChange);
    </script>
  </body>
</html>
